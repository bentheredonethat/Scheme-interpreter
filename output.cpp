// Autogenerated Scheme to C++ Code
// File: test1.cpp
#include <iostream>
#include “Object.h”

using namespace std;

Object pi( Object a, Object b, Object c){
	((if n > 0){
		return	n = 10;
	}
	else{
		n = 1;
	})

}
Object pi( ){
	return ((if n > 0){
		n = 10;
	}
	else{
		n = 1;
	})

}

int main(){
	(car(Object("(abc def ghi"));
	(cdr(Object("(abc def ghi"));
	(cons(Object("(abd)"), Object("(1 2 3)");
	(cons(Object("a"), Object("b");
	(cons(Object(car("(a b c d)"))),Object(cddr(Object("(a b c d)"))));
	(cons (Object(cadr(Object("(a b c d)")))), caddr(Object("(a b c d)")));
	(4 + 5 + 2 + 7 + 5 + 2);
	((2 * 2 * 2 * 2 * 2) + (5 * 5)); 
	(cons (Object(1)), (Object(2)));
	(cons (Object("(1 2 3)")), (Object("(4 5 6)")));
	(cdr (Object("if it rains every day"))) (cdr Object((cdr ("(a b c d e f)"))));

	Object n = 10;
	((n = 14) && (n+1));
	(if (n < 20){
		((n - 19) || (n + 1));
	});


	(if ( (!(numberp(Object(n))))) {
		Object("()");
	}
	else{
		(Object(n)+Object(1));
	});
	(if (!(symbolp(Object(pi)))) {
		Object("()");
	}
	else{
		(Object(n) + Object(1));
	})

	(listp(Object(a)));
	(zerop(Object(n)));
	(nullp(Object(a)));
	(charp(Object(a)));
	(stringp(Object(a)));
	(Object(n) / Object(2));
	(Object(n) <= Object(n));
	(Object(n) >= Object(n));
	return 0;
}



